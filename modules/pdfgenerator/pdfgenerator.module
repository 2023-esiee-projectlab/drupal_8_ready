<?php

/**
 * @file
 * Contains breakfast.module
 */

// Permet d'implémenter l'interface de configuration de Drupal.
use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormStateInterface;
// Permet d'implémenter l'interface de routage de Drupal.
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Provides a form for configuring Mon module settings.
 */
class MonModuleSettingsForm extends ConfigFormBase {

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'mon_module_settings_form';
  }

  /**
   * {@inheritdoc}
   */
  protected function getEditableConfigNames() {
    return ['mon_module.settings'];
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $config = $this->config('mon_module.settings');

    $form['setting'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Setting'),
      '#default_value' => $config->get('setting'),
    ];

    return parent::buildForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $config = $this->config('mon_module.settings');
    $config->set('setting', $form_state->getValue('setting'));
    $config->save();
    parent::submitForm($form, $form_state);
  }
}

/**
 * Implements hook_help().
 */

function pdfgenerator_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    // Main module help for the breakfast module.
    case 'help.page.pdfgenerator':
      $output = '';
      $output .= '<h3>' . t('A propos') . '</h3>';
      $output .= '<p>' . t('Ce module permet de générer un fichier PDF.') . '</p>';
      return $output;
    break;
  }
}

/**
 * Implements hook_theme().
 */

function pdfgenerator_theme()
{
  $theme = [];

  return $theme;
}
